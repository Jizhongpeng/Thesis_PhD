%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.04
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Microsoft Windows 7.
%%Title: C:\\Users\\Massimo\\AppData\\Local\\Temp\\tp7465e753_6c8a_4f4a_8ff3_68a19c5aa01b.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 962 515
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.04 0
%%Copyright: Copyright 1996-2014 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /pdfDuplex exch def
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      pdfDuplex { /Duplex true def } if
    currentdict end setpagedevice
  } if
  /pdfPageW 0 def
  /pdfPageH 0 def
} def
/pdfSetupPaper {
  2 copy pdfPageH ne exch pdfPageW ne or {
    /pdfPageH exch def
    /pdfPageW exch def
    /setpagedevice where {
      pop 3 dict begin
        /PageSize [pdfPageW pdfPageH] def
        pdfDuplex { /Duplex true def } if
        /ImagingBBox null def
      currentdict end setpagedevice
    } if
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr {
  4 2 roll exch 5 index div exch 4 index div moveto
  exch 3 index div dup 0 rlineto
  exch 2 index div 0 exch rlineto
  neg 0 rlineto
  closepath
} def
/pdfImClip { gsave clip } def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font SLYQAH+Helvetica
%!FontType1-1.0: SLYQAH+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /SLYQAH+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 544 709] readonly def
/StrokeWidth 0 def
/UniqueID 5082796 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /minus put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F8F5F4A9E0AFF628F510E90C9F1D354588725C2EBE0094DF1BAFB2B
FC6E077D8105B4A153343D6B6E82BA00E1DB9787104A3E73BA68CD273FE67339
EB4DFBB44C9E6EC210DF4B7AB71581F6FB933AED5754F1107DD81BF263CCC488
E457EB6CC45EE092F636B17F1ACA39AB062EC3AB454E7FED7E17D631CE406A56
F46F06639741543CF581F9E66E64F500C7186F34EE245F0ED85E61E6EB801EBD
714060FBEE9998FE3056CEECA624B82ECA71B07CDAB99D3355305CBF59932303
58F4A7C7C2C750AA9340A4408715AA1F63C962700CDD3D54D8D91129377B9014
5B8265FDC1BF6E9294363E6EA144A2B575A96CBE1236257E6AA11551BF7569FB
6318D5EE73C2B999C9C301FE3CAFAEFE417E403C48804EA246FB3F4D23776FCA
D824273D139594B540C478E10B4E95125929289300D8A29B5DE2564728E16CD7
F3C403A847994D8A5EA672B0A3A61FB9579D0C47383680A1E6208D54C8716967
8E44D9797525A24C83E4E37F79620533D8F947F3BF72E915CFDB76DFDBFE4856
B50F164D4FF639270958DDB67C04E6F9EF04E67AD467AA5BDB365F18F46DAA68
B0320BF7B24649408897D4095420A8A0927F774D5A49FAA69C9E443B519D9F0A
93A7941E72FC083B45F5314F2D7A083F91FE056B74245709ED5132A9620ACF54
FBAC801FADFA5CAEEA2885709894BA60AC71BC11177AACF76F995AE0A805ABBA
EED5B45AC2A128802FAB28878AC55FD7952EE45AA424F57D11B195EA5EFAC713
45E0BE90DD6525A73E710180394483CA2C5BCD5ADFF27497FD000BD74304EE36
D34EF44462F1EBAD93AB783484865915AF29454611999870F0E4A6E156A4098F
DFB0A861E73CFC3EDD392792DD69D4798281BCA60C5A730602665E9ADBB43C1D
558E9FE6BB513CE198FB4B5D7304B165C1FB7984CFC8B3E2142E42F6AC741CDC
E40708676D7FACB8F517B217B19E8E0195F5E516163E6D2995892393AB9E62A9
54812071535C602ACD09402A2B617C04C1A63CB45AD9FF1138FBAAE76E5FF57A
6E18266061A785603D5D2051BBE879FDA7F0BCFB7FEA79461F4437EB6B72BEF6
6A76FEF588A1DF3C455CE34090130E5655114C01686CD060557E3A70E844BFBC
F4F8EE0756C295C2A2A80778D051DBE04B7C36CDC0C2A347EB24CFDA3867BBF0
36812ED36E50B397659A8AC53EDA2C8DC8D974EA40808F3882469FDC085DAACA
2270CF5BB4604C880AB9EB3F16B1D056987D0757844A4F14BDD260ED974E91CD
6FD5B31EA32DC22A2A6447F8099409B01C76004EC6288F734D21242A6644C08D
F741860A19B5806E8C4EA3EE77382608899EAD4E6867A2F3496724187EE19111
D714067713910514B143D86AF140AF5BE8FD6A108504F9B6F5CFC313A1710DD1
421AA09D54AC2AC3D3DCD07529DE099EB378F36AF79989A9EB5890CAE149C0BC
A1BD876D1F646B46B274BC54D054E10C69168AAD7714A458F32D34E15E3B714B
B94C7DBAE8EFAE4942B6B90FE580DC9B99F9EA76BAC5446392960BC5BC7829CB
135F4CB4FA926AB0440C8BF4EE86D34F1ECA7AC9F61A2E5BDD48EF36F7B81A8E
2E021657C67F314A85
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /SLYQAH+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
end
%%EndSetup
xpdf begin
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 962 515 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 2 9620 5148 re
W
/DeviceGray {} cs
[1] sc
161.668 124.168 9307.5 4795 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
161.668 124.168 9307.502 4795.002 re
S
/DeviceGray {} CS
[0] SC
161.668 4919.17 m
9469.17 4919.17 l
S
161.668 124.168 m
9469.17 124.168 l
S
9469.17 124.168 m
9469.17 4919.17 l
S
161.668 124.168 m
161.668 4919.17 l
S
161.668 124.168 m
9469.17 124.168 l
S
161.668 124.168 m
161.668 4919.17 l
S
161.668 124.168 m
161.668 217.5 l
S
161.668 4919.17 m
161.668 4826.67 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 -0.75 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(-4000)
[5.84
0
5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
1325 124.168 m
1325 217.5 l
S
1325 4919.17 m
1325 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 115.583 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(-3000)
[5.84
0
5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
2488.33 124.168 m
2488.33 217.5 l
S
2488.33 4919.17 m
2488.33 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 231.917 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(-2000)
[5.84
0
5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
3651.67 124.168 m
3651.67 217.5 l
S
3651.67 4919.17 m
3651.67 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 348.25 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(-1000)
[5.84
0
5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
4815 124.168 m
4815 217.5 l
S
4815 4919.17 m
4815 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 478.75 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
5978.33 124.168 m
5978.33 217.5 l
S
5978.33 4919.17 m
5978.33 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 586.75 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(1000)
[5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
7141.67 124.168 m
7141.67 217.5 l
S
7141.67 4919.17 m
7141.67 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 703.084 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(2000)
[5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
8305 124.168 m
8305 217.5 l
S
8305 4919.17 m
8305 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 819.417 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(3000)
[5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
9469.17 124.168 m
9469.17 217.5 l
S
9469.17 4919.17 m
9469.17 4826.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 935.834 0.333203] Tm
0 0 Td
/F8_0 10 Tf
(4000)
[5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
161.668 124.168 m
254.168 124.168 l
S
9469.17 124.168 m
9375.84 124.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.75 8.75] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
161.668 809.168 m
254.168 809.168 l
S
9469.17 809.168 m
9375.84 809.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.75 77.25] Tm
0 0 Td
/F8_0 10 Tf
(2)
[5.56
0] Tj
Q
161.668 1494.17 m
254.168 1494.17 l
S
9469.17 1494.17 m
9375.84 1494.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.75 145.75] Tm
0 0 Td
/F8_0 10 Tf
(4)
[5.56
0] Tj
Q
161.668 2179.17 m
254.168 2179.17 l
S
9469.17 2179.17 m
9375.84 2179.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.75 214.25] Tm
0 0 Td
/F8_0 10 Tf
(6)
[5.56
0] Tj
Q
161.668 2864.17 m
254.168 2864.17 l
S
9469.17 2864.17 m
9375.84 2864.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.75 282.75] Tm
0 0 Td
/F8_0 10 Tf
(8)
[5.56
0] Tj
Q
161.668 3549.17 m
254.168 3549.17 l
S
9469.17 3549.17 m
9375.84 3549.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 2.1668 351.25] Tm
0 0 Td
/F8_0 10 Tf
(10)
[5.56
0
5.56
0] Tj
Q
161.668 4234.17 m
254.168 4234.17 l
S
9469.17 4234.17 m
9375.84 4234.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 2.1668 419.75] Tm
0 0 Td
/F8_0 10 Tf
(12)
[5.56
0
5.56
0] Tj
Q
161.668 4919.17 m
254.168 4919.17 l
S
9469.17 4919.17 m
9375.84 4919.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 2.1668 488.25] Tm
0 0 Td
/F8_0 10 Tf
(14)
[5.56
0
5.56
0] Tj
Q
161.668 4919.17 m
9469.17 4919.17 l
S
161.668 124.168 m
9469.17 124.168 l
S
9469.17 124.168 m
9469.17 4919.17 l
S
161.668 124.168 m
161.668 4919.17 l
S
Q
q
161.668 123.332 9308.33 4795.84 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
898.332 349.168 m
975.832 350.832 l
1053.33 349.168 l
1130.83 339.168 l
1208.33 325.832 l
1285.83 315 l
1363.33 303.332 l
1440.83 287.5 l
1518.33 270 l
1595.83 246.668 l
1673.33 219.168 l
1751.67 190.832 l
1829.17 165.832 l
1906.67 173.332 l
1984.17 195 l
2061.67 215 l
2139.17 240.832 l
2216.67 278.332 l
2294.17 316.668 l
2371.67 351.668 l
2449.17 385 l
2526.67 417.5 l
2604.17 444.168 l
2681.67 465.832 l
2760 480.832 l
2837.5 491.668 l
2915 490.832 l
2992.5 482.5 l
3070 463.332 l
3147.5 433.332 l
3225 439.168 l
3302.5 471.668 l
3380 523.332 l
3457.5 595.832 l
3535 689.168 l
3612.5 805.832 l
3690 944.168 l
3767.5 1105 l
3845.83 1285 l
3923.33 1485 l
4000.83 1705 l
4078.33 1940 l
4155.83 2189.17 l
4233.33 2443.33 l
4310.83 2705 l
4388.33 2960 l
4465.83 3204.17 l
4543.33 3436.67 l
4620.83 3648.33 l
4698.33 3850.83 l
4775.83 4015 l
4854.17 3850.83 l
4931.67 3648.33 l
5009.17 3436.67 l
5086.67 3204.17 l
5164.17 2960 l
5241.67 2705 l
5319.17 2443.33 l
5396.67 2189.17 l
5474.17 1940 l
5551.67 1705 l
5629.17 1485 l
5706.67 1285 l
5784.17 1105 l
5862.5 944.168 l
5940 805.832 l
6017.5 689.168 l
6095 595.832 l
6172.5 523.332 l
6250 471.668 l
6327.5 439.168 l
6405 433.332 l
6482.5 463.332 l
6560 482.5 l
6637.5 490.832 l
6715 491.668 l
6792.5 480.832 l
6870 465.832 l
6948.33 444.168 l
7025.83 417.5 l
7103.33 385 l
7180.83 351.668 l
7258.33 316.668 l
7335.83 278.332 l
7413.33 240.832 l
7490.83 215 l
7568.33 195 l
7645.83 173.332 l
7723.33 165.832 l
7800.83 190.832 l
7878.33 219.168 l
7956.67 246.668 l
8034.17 270 l
8111.67 287.5 l
8189.17 303.332 l
8266.67 315 l
8344.17 325.832 l
8421.67 339.168 l
8499.17 349.168 l
8576.67 350.832 l
8654.17 349.168 l
S
Q
q
0 2 9620 5148 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 463.417 499.834] Tm
0 0 Td
/F8_0 10 Tf
(0.73684)
[5.56
0
2.78
0
5.56
0
5.56
0
5.56
0
5.56
0
5.56
0] Tj
Q
Q
q
161.668 123.332 9308.33 4795.84 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
898.332 225 m
975.832 225 l
1053.33 237.5 l
1130.83 253.332 l
1208.33 259.168 l
1285.83 262.5 l
1363.33 266.668 l
1440.83 270 l
1518.33 274.168 l
1595.83 279.168 l
1673.33 281.668 l
1751.67 287.5 l
1829.17 288.332 l
1906.67 283.332 l
1984.17 278.332 l
2061.67 266.668 l
2139.17 250 l
2216.67 258.332 l
2294.17 281.668 l
2371.67 310.832 l
2449.17 338.332 l
2526.67 370 l
2604.17 408.332 l
2681.67 445 l
2760 486.668 l
2837.5 537.5 l
2915 586.668 l
2992.5 641.668 l
3070 705 l
3147.5 766.668 l
3225 833.332 l
3302.5 910 l
3380 988.332 l
3457.5 1075.83 l
3535 1180 l
3612.5 1292.5 l
3690 1421.67 l
3767.5 1577.5 l
3845.83 1746.67 l
3923.33 1940.83 l
4000.83 2166.67 l
4078.33 2405 l
4155.83 2667.5 l
4233.33 2960.83 l
4310.83 3247.5 l
4388.33 3529.17 l
4465.83 3815 l
4543.33 4060.83 l
4620.83 4293.33 l
4698.33 4555.83 l
4775.83 4692.5 l
4854.17 4555.83 l
4931.67 4293.33 l
5009.17 4060.83 l
5086.67 3815 l
5164.17 3529.17 l
5241.67 3247.5 l
5319.17 2960.83 l
5396.67 2667.5 l
5474.17 2405 l
5551.67 2166.67 l
5629.17 1940.83 l
5706.67 1746.67 l
5784.17 1577.5 l
5862.5 1421.67 l
5940 1292.5 l
6017.5 1180 l
6095 1075.83 l
6172.5 988.332 l
6250 910 l
6327.5 833.332 l
6405 766.668 l
6482.5 705 l
6560 641.668 l
6637.5 586.668 l
6715 537.5 l
6792.5 486.668 l
6870 445 l
6948.33 408.332 l
7025.83 370 l
7103.33 338.332 l
7180.83 310.832 l
7258.33 281.668 l
7335.83 258.332 l
7413.33 250 l
7490.83 266.668 l
7568.33 278.332 l
7645.83 283.332 l
7723.33 288.332 l
7800.83 287.5 l
7878.33 281.668 l
7956.67 279.168 l
8034.17 274.168 l
8111.67 270 l
8189.17 266.668 l
8266.67 262.5 l
8344.17 259.168 l
8421.67 253.332 l
8499.17 237.5 l
8576.67 225 l
8654.17 225 l
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
end
%%Trailer
%%DocumentSuppliedResources:
%%+ font SLYQAH+Helvetica
%%EOF

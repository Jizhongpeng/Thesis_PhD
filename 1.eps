%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.04
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Microsoft Windows 7.
%%Title: C:\\Users\\Massimo\\AppData\\Local\\Temp\\tpa2ab14de_411d_408f_9820_67c9acbb1885.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 264 283
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.04 0
%%Copyright: Copyright 1996-2014 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /pdfDuplex exch def
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      pdfDuplex { /Duplex true def } if
    currentdict end setpagedevice
  } if
  /pdfPageW 0 def
  /pdfPageH 0 def
} def
/pdfSetupPaper {
  2 copy pdfPageH ne exch pdfPageW ne or {
    /pdfPageH exch def
    /pdfPageW exch def
    /setpagedevice where {
      pop 3 dict begin
        /PageSize [pdfPageW pdfPageH] def
        pdfDuplex { /Duplex true def } if
        /ImagingBBox null def
      currentdict end setpagedevice
    } if
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr {
  4 2 roll exch 5 index div exch 4 index div moveto
  exch 3 index div dup 0 rlineto
  exch 2 index div 0 exch rlineto
  neg 0 rlineto
  closepath
} def
/pdfImClip { gsave clip } def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font WEXNLY+Helvetica
%!FontType1-1.0: WEXNLY+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /WEXNLY+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 535 729] readonly def
/StrokeWidth 0 def
/UniqueID 5082796 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 49 /one put
dup 61 /equal put
dup 97 /a put
dup 104 /h put
dup 108 /l put
dup 112 /p put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF365DA4EEE30DA5C52F40EEEB3C6F87B4D5DEFC8990CFEDF910E19A24
0AD78A9BE600DBC02F2392F618585EB7FF2C519B3E260DF18D9369FA664AA6C5
65FAE39A382F2DB25A282D8BD0F9F00130B238DCEA2CB2E928D3D356217048F7
CA01B38A665D8565513D88512EAA0413D0E095C1534D51F313EA0850D5A00C10
76DC9BF34CBDF87CE9E10A47162681D57DBE817EAA775E4D26F703538A874AE6
D6222213156061378D590930DF2825156C08A5DF9AC4EB90E77882C7737A1353
C6A4B8E0ECD49A7417CB7F8F0930C99A1524BD0ECFF2C45A31C5D1F93C134445
0C138A9B87CE57D78BB0617F35DB177C2D33FF992E355CD60A9A81E24526BF6A
1300FCDABE92F3CDF15EE1628909965C897A0E6EC619F40E779F374055A53FF3
4D74A991F8409450073EB74196D8E3D5DBB4D40F9BBB45B2FEBC40D5F7020660
041D966B1876E55536906B6B009E6E5269539DA1A0DA7303EF088A3EA4E7CB64
F5000F151ADE354C9CE9814C77283ECDFD4C396059ADA657D361D341A8A3224D
F8DB637C9A0B476A2E204D41D6D5A1F9502B719E8079AEE9F50670AC1FFAB266
3EEA25929F645D99C7C4F7BA5BE590AC470CC0DF87C793310310B2304A8E836F
4D8481239A01E43A1E62B979D619A7633EA098E35F456D169833995E931B72C1
31169FB0726006E9AF3D59539DA92FA6D99E7A8043318F97BF7D6D5029B1CA7D
79F164C8438DF8527804257D60B2E42C8D61B26018890B7FD418A867FA74B688
F1423A6F06FC420BE6A1AA89FE51B233EEFD0F66E30C6D191A49DC02F0B158CF
3902B6A64E37B52C3B552C3FA897C2482B51F27208F834B459CA8461F7F81FD9
BB7464EB38222CC9EA9A057338D3C0AF6F091FB2602018F5298D5F99CE172429
C9661A848291E661984CD060E1BFA739F5F8759EB8F6F4D7B9909F682118D0CC
5C5C8DAED582DA7FAEC8DFC6AA5B374882E8488F78ADC5BB5ACE730E466DE183
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F10_0 /WEXNLY+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
end
%%EndSetup
xpdf begin
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 264 283 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
2 5 2638 2825 re
W
/DeviceGray {} cs
[1] sc
30.832 35 2569.17 2569.17 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
30.832 35 2569.168 2569.17 re
S
Q
q
31.668 35 2568.33 2568.33 re
W
q
[2568.33 0 0 2568.33 31.6668 35.0002] cm
[/Indexed /DeviceRGB 63 <
  0000000404040808080c0c0c1010101414141818181c1c1c
  2020202424242828282c2c2c3030303434343838383c3c3c
  4040404444444848484c4c4c5050505555555959595d5d5d
  6161616565656969696d6d6d7171717575757979797d7d7d
  8181818585858989898d8d8d9191919595959999999d9d9d
  a1a1a1a5a5a5aaaaaaaeaeaeb2b2b2b6b6b6babababebebe
  c2c2c2c6c6c6cacacacececed2d2d2d6d6d6dadadadedede
  e2e2e2e6e6e6eaeaeaeeeeeef2f2f2f6f6f6fafafaffffff
>] setcolorspace
<<
  /ImageType 1
  /Width 75
  /Height 75
  /ImageMatrix [75 0 0 -75 0 75]
  /BitsPerComponent 8
  /Decode [0 255]
  /DataSource currentfile
    /ASCII85Decode filter
    /LZWDecode filter
>>
pdfIm
J,g]g3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_=jAeBP)&./N-9]BFk+=%^1!R@@2)C4GT!LeVV5d2gUSLOVi^gKD=":>A9<@Uuk
&.53;"+n@R\[W=_<ruAMcq99%fj2#(5X:34A.fL[Jq2H<5U6kK#6TROd+C;sF9i$O
!DmG`%61'-Bs9&E%a5'c_gikKD#URC#i`]%&5Y>/$jHk:5qp)f1(ObF63/3b6m`ZV
"2U;e*Ch'1X%hl%=Huu.%'31&@*j^:Bt"KS_BD13>V$]U"Mu;>5Vs)geH,_TclakZ
%g(9HFdn+t)cd5g1&eCX/3"(H"[Tsi[[7g:!oU,\$3=Ni]E+qUo>Z=]8amE%!D99t
"Ls8fU'Leb?jm1F^o/FdJmdLp$NhNu.-gs8i&hUZE2&0nJq.<\S??Z`Pc?NuJh7*+
b%,&#3:/[J$qPoa(^bm<j&cYq?p\h.!?daJ#<2]6rk<u$fF8^mi"-A$JH.YE.=kD!
IKkCSa>V$pcHmE_JuW2_RXkHc9[!J:&.AaDWP$@T!DnY-W2hD(&B=dX!#WM'0RsS9
:MU4]$A%S('+QZK&-/a3TTBkeJH/mN.O-Do(ojI6qNjRbb!M4R!R5"*3s%$EG*shq
?m5]RY5KGHUai[c[&3/HU'H9Ki$\g35XME#J:L#s:!`l&_Zchco.a/dbh*F7`_'^l
03WG<&OaqORZQJ[8fT>c>Da&6pF'+Fm<d_,c1QMBQgOa$i"uq,[U.,IUMNkOif:6o
<d!W$U]:Z65(Z%)BEn`l4!G(:6&9=m"orNPK.[-P,E\`d%71,!QIl?Pi<leQ'*:fd
&.aN2Fm&k1TElYT!;Lpm"+f$Z0;,>](`p)8+IG#eW0uRS"=_K4#SVfilR'b!?jsKI
![(s`#(qFU$3GpM>1`n0T^W3nJO$.f#L6_5@M4570IWFkD1Ek2!$G)cTVlQ``XXJ+
cM"[I+`Imf!+<<%",C=+3"Z?6E#p*TCWKJEJjCe>'nF(r2@b@i-OU^jNJJ&W!ErkE
N:Hu,1'@i4g27#t+J9,]DLcCjDhbXs]E&'Vcjq-@/D(a.J1p[=$Fbte$kr#(+B./$
NtS0#KE*]<#QR+t@KQ2qg5#e3O4I/%X;/MZ$KnrB5RaWl-jBt^ld0U(8r+bpi"Qa.
E"pY!fH3]MhuS@Y0%CBY0*$MV"I"oO"Mj>8>G)rI!e:ne5WBM^c%lH(#+bi\GU*;4
'G:E("9O-h>6UZV[(Pt6adLQF-Dg*b)q(&LeCXp+^t9<P&5WX8&Ng4^S.5T#>R$(Q
-[^Fq'qUL,#D"&+9>G?P46D2mb'=+>A145RFCbmg-j0]"kb"[FQC_?-GlY'FTTd/$
lA7l.+CGlnZ":FBRU]#=5R\&e"pZ!:</2UB1.=ae*@'WuOciU;8kE/;-03"4,pWT~>
%-EOD-
Q
Q
q
2 5 2638 2825 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 112.167 268.333] Tm
0 0 Td
/F10_0 10 Tf
(alpha =1)
[5.56
0
2.22
0
5.56
0
5.56
0
5.56
0
2.78
0
5.84
0
5.56
0] Tj
Q
5 w
1 j
/DeviceGray {} CS
[0] SC
30.832 35 m
2600 35 l
S
30.832 2604.17 m
2600 2604.17 l
S
2600 2604.17 m
2600 35 l
S
30.832 2604.17 m
30.832 35 l
S
30.832 35 m
2600 35 l
S
30.832 2604.17 m
30.832 35 l
S
356.668 35 m
356.668 60.832 l
S
356.668 2604.17 m
356.668 2578.33 l
S
699.168 35 m
699.168 60.832 l
S
699.168 2604.17 m
699.168 2578.33 l
S
1041.67 35 m
1041.67 60.832 l
S
1041.67 2604.17 m
1041.67 2578.33 l
S
1384.17 35 m
1384.17 60.832 l
S
1384.17 2604.17 m
1384.17 2578.33 l
S
1726.67 35 m
1726.67 60.832 l
S
1726.67 2604.17 m
1726.67 2578.33 l
S
2069.17 35 m
2069.17 60.832 l
S
2069.17 2604.17 m
2069.17 2578.33 l
S
2410.83 35 m
2410.83 60.832 l
S
2410.83 2604.17 m
2410.83 2578.33 l
S
30.832 2278.33 m
56.668 2278.33 l
S
2600 2278.33 m
2574.17 2278.33 l
S
30.832 1935.83 m
56.668 1935.83 l
S
2600 1935.83 m
2574.17 1935.83 l
S
30.832 1593.33 m
56.668 1593.33 l
S
2600 1593.33 m
2574.17 1593.33 l
S
30.832 1250.83 m
56.668 1250.83 l
S
2600 1250.83 m
2574.17 1250.83 l
S
30.832 908.332 m
56.668 908.332 l
S
2600 908.332 m
2574.17 908.332 l
S
30.832 565.832 m
56.668 565.832 l
S
2600 565.832 m
2574.17 565.832 l
S
30.832 224.168 m
56.668 224.168 l
S
2600 224.168 m
2574.17 224.168 l
S
30.832 35 m
2600 35 l
S
30.832 2604.17 m
2600 2604.17 l
S
2600 2604.17 m
2600 35 l
S
30.832 2604.17 m
30.832 35 l
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
end
%%Trailer
%%DocumentSuppliedResources:
%%+ font WEXNLY+Helvetica
%%EOF
